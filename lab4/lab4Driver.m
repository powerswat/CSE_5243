function lab4Driver(min_pts, eps)

if ~exist('min_pts', 'var') || isempty(min_pts), min_pts = 1; end
if ~exist('eps', 'var') || isempty(eps), eps = 0.05; end

num_exec = length(min_pts) * length(eps);
param_set = zeros(num_exec, 2);
idx = 1;
for i=1:length(min_pts)
    for j=1:length(eps)
        param_set(idx,1) = min_pts(i);
        param_set(idx,2) = eps(j);
        idx = idx + 1;
    end
end

%% Read all the necessary input data
baseDir = 'C:\Temp\CSE_5243\';
disp('Read all the necessary input data');
tic;
[tot_mat, ~, rest_tot_mat, ~] = readInputMat(baseDir);
toc

file_id = fopen([baseDir '\result.txt'], 'w');

%% Run the clustering algorithm
for i=1:num_exec
    disp(['Minimun number neighbor: ', num2str(param_set(i,1)) ...
               , ', Epsilon: ', num2str(param_set(i,2))]);
    [Euc_DB_sil_score, Euc_DB_entropy, euc_DB_var, euc_db_time, euc_db_num_clust, ...
    Man_DB_sil_score, Man_DB_entropy, man_DB_var, man_db_time, man_db_num_clust, ...
    Euc_K_sil_score, Euc_K_entropy, euc_K_var, euc_k_time, euc_k_num_clust, ...
    Man_K_sil_score, Man_K_entropy, man_K_var, man_k_time, man_k_num_clust] ...
        = clusterReuter (param_set(i,1), param_set(i,2), tot_mat, rest_tot_mat);
    
    displayResults(Euc_DB_sil_score, Euc_DB_entropy, euc_DB_var, euc_db_time, euc_db_num_clust, ...
        Man_DB_sil_score, Man_DB_entropy, man_DB_var, man_db_time, man_db_num_clust, ...
        Euc_K_sil_score, Euc_K_entropy, euc_K_var, euc_k_time, euc_k_num_clust, ...
        Man_K_sil_score, Man_K_entropy, man_K_var, man_k_time, man_k_num_clust, ...
        file_id, param_set(i,1), param_set(i,2));
end

fclose(file_id);

end

function displayResults(Euc_DB_sil_score, Euc_DB_entropy, euc_DB_var, euc_db_time, euc_db_num_clust, ...
    Man_DB_sil_score, Man_DB_entropy, man_DB_var, man_db_time, man_db_num_clust, ...
    Euc_K_sil_score, Euc_K_entropy, euc_K_var, euc_k_time, euc_k_num_clust, ...
    Man_K_sil_score, Man_K_entropy, man_K_var, man_k_time, man_k_num_clust, ...
    file_id, min_pt, eps)

    fprintf(file_id, '\r\n%s\r\n', ['DBscan with Euclidean distance (min_pt: ' ...
                    num2str(min_pt) ', eps: ' num2str(eps) ', # cluster: ' ...
                    num2str(euc_db_num_clust) ', # noise: ' ...
                    num2str(euc_db_num_clust - euc_k_num_clust) ')']);
    fprintf(file_id, '%s\t%s\t\t%s\t%s\r\n', 'Silhouette', 'Entropy', 'Variance', 'Duration');
    fprintf(file_id, '%s\t\t%s\t\t%s\t%s\r\n', num2str(Euc_DB_sil_score), num2str(Euc_DB_entropy) ...
                       , num2str(euc_DB_var), num2str(euc_db_time));
    
    fprintf(file_id, '\r\n%s\r\n', ['DBscan with Manhattan distance (min_pt: ' ...
                    num2str(min_pt) ', eps: ' num2str(eps) ', # cluster: ' ...
                    num2str(man_db_num_clust) ', # noise: ' ...
                    num2str(man_db_num_clust - man_k_num_clust) ')']);
    fprintf(file_id, '%s\t%s\t\t%s\t%s\r\n', 'Silhouette', 'Entropy', 'Variance', 'Duration');
    fprintf(file_id, '%s\t\t%s\t\t%s\t%s\r\n', num2str(Man_DB_sil_score), num2str(Man_DB_entropy) ...
                       , num2str(man_DB_var), num2str(man_db_time));
    
    fprintf(file_id, '\r\n%s\r\n', ['Kmeans with Euclidean distance (min_pt: ' ...
                    num2str(min_pt) ', eps: ' num2str(eps) ', # cluster: ' ...
                    num2str(euc_k_num_clust) ')']);
    fprintf(file_id, '%s\t%s\t\t%s\t%s\r\n', 'Silhouette', 'Entropy', 'Variance', 'Duration');
    fprintf(file_id, '%s\t%s\t\t%s\t%s\r\n', num2str(Euc_K_sil_score), num2str(Euc_K_entropy) ...
                   , num2str(euc_K_var), num2str(euc_k_time));
    
    fprintf(file_id, '\r\n%s\r\n', ['Kmeans with Manhattan distance (min_pt: ' ...
                    num2str(min_pt) ', eps: ' num2str(eps) ', # cluster: ' ...
                    num2str(man_k_num_clust) ')']);
    fprintf(file_id, '%s\t%s\t\t%s\t%s\r\n', 'Silhouette', 'Entropy', 'Variance', 'Duration');
    fprintf(file_id, '%s\t\t%s\t\t%s\t%s\r\n', num2str(Man_K_sil_score), ...
                    num2str(Man_K_entropy), num2str(man_K_var), num2str(man_k_time));
end